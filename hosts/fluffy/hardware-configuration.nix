# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:
let
  mountOptions = [ "compress=zstd:7" "noatime" "discard=async" ];
  mapDevice = "/dev/mapper/system";
in
{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ehci_pci" "ahci" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" "i915" "radeon" ];
  boot.initrd.kernelModules = [ "i915" "radeon" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.kernelParams = [ "i915.modeset=1" ];
  boot.extraModulePackages = [ ];
  boot.kernelPackages = pkgs.linuxKernel.packages.linux_xanmod;

  boot.initrd.luks.devices."system".device = "/dev/sda2";

  fileSystems = {
    "/" = {
      device = mapDevice;
      fsType = "btrfs";
      options = [ "subvol=@nixos" ] ++ mountOptions;
    };

    "/boot" =
      {
        device = "/dev/sda1";
        fsType = "vfat";
      };

    "/nix" =
      {
        device = mapDevice;
        fsType = "btrfs";
        options = [ "subvol=@nix" ] ++ mountOptions;
      };

    "/home" =
      {
        device = mapDevice;
        fsType = "btrfs";
        options = [ "subvol=@home" ] ++ mountOptions;
      };
  };




  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp8s0.useDHCP = lib.mkDefault true;

  hardware.cpu.intel.updateMicrocode = lib.mkDefault true;
}
